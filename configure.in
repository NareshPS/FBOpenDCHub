dnl Process this file with autoconf to produce a configure script.
AC_INIT(configure.in)
AM_INIT_AUTOMAKE(opendchub, 0.7.14)
AM_CONFIG_HEADER(config.h)
AM_SANITY_CHECK
AC_DEFINE(_GNU_SOURCE)

dnl Checks for programs.
AC_PROG_CC

dnl Checks for libraries.
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, gethostbyname)
AC_CHECK_LIB(crypt, crypt)
AC_CHECK_LIB(crypto, crypt)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(crypt.h fcntl.h malloc.h sys/poll.h sys/select.h sys/time.h)
AC_CHECK_HEADERS(syslog.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME
AC_TYPE_MODE_T
AC_TYPE_PID_T

dnl Checks for library functions.
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gethostname mkdir poll select socket strstr strtoll strtoq)

dnl Check for capabilities
AC_ARG_ENABLE(switch_user,
   AC_HELP_STRING([--enable-switch_user],
   		  [switch user/group if started as root]),
   if test "$enableval" = "yes"; then
      CHECK="yes"
   fi
)

if test "$CHECK" = "yes"; then
   FAIL="false"
   AC_CHECK_LIB(cap, cap_set_proc, [
      LIBS="-lcap $LIBS"
      AC_DEFINE([HAS_CAP_SET_PROC], [], [Has the cap_set_proc function])
      AC_CHECK_HEADERS(sys/capability.h, [], [FAIL="true"])
      AC_CHECK_HEADERS(sys/prctl.h, [], [FAIL="true"])
      AC_CHECK_HEADERS(pwd.h, [], [FAIL="true"])
      AC_CHECK_HEADERS(grp.h, [], [FAIL="true"])
   ], [FAIL="true"])
 
   if test "$FAIL" = "false"; then
      AC_DEFINE([SWITCH_USER], [], [Switch user if started as root])
      echo "Switch user support is enabled."
   else
      echo "Switch user support is disabled."
   fi
fi

dnl Check if config directory exists.
if test ! -d $HOME/.opendchub; then
   echo "creating config directory: $HOME/.opendchub"
   mkdir $HOME/.opendchub
   chmod 700 $HOME/.opendchub;
fi

AC_ARG_ENABLE(perl,
   AC_HELP_STRING([--disable-perl], [disable perl script support]),
   if test "$enableval" = "no"; then
      ENABLE_PERL="no"
   fi,
   [ENABLE_PERL="yes"]
)

if test "$ENABLE_PERL" = "yes"; then
   AC_CHECK_PROG(ENABLE_PERL, perl, yes, no)
   if test "$ENABLE_PERL" = "no"; then
      AC_MSG_WARN(Perl wasn't found. Scripting will be disabled.)
   else
       AC_SUBST(perl_flags)
       perl_flags=`perl -MExtUtils::Embed -e ccopts`
       AC_SUBST(perl_libs)
       perl_libs=`perl -MExtUtils::Embed -e ldopts`
       
       dnl Check if script directory exists.
       dnl Creates it and copies sample scripts to it if it doesn't.
       if test ! -d $HOME/.opendchub/scripts; then
       	  echo "creating script directory: $HOME/.opendchub/scripts"
       	  mkdir $HOME/.opendchub/scripts
	  chmod 700 $HOME/.opendchub/scripts;
	  for i in Samplescripts/*; do
	      cp $i $HOME/.opendchub/scripts;
	  done
       fi       
   fi
else
    echo "Perl script support is disabled."
fi

if test "$ENABLE_PERL" = "yes"; then
   AC_DEFINE(HAVE_PERL, [], [Define HAVE_PERL])   
fi


AC_OUTPUT(Makefile src/Makefile)

echo ""
echo "*** Type \"gmake\" to build opendchub ***"
echo "*** If \"gmake\" does not work, try \"make\" ***"
echo ""
